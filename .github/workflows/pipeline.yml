name: Build and Push to ECR
on:
  push:
    branches:
      - feature/dockerize
      - develop
      - master
      - main
  # pull_request:
  #   branches: [develop]

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "IMAGE_TAG=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        id: vars
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: translation-cms
        if: github.ref == 'refs/heads/master' ||  github.ref == 'refs/heads/main'
        run: |
          echo $IMAGE_TAG
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG} -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: translation-cms
        if: github.ref == 'refs/heads/develop' ||  github.ref == 'refs/heads/feature/dockerize'
        run: |
          echo $IMAGE_TAG
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG} -t $ECR_REGISTRY/$ECR_REPOSITORY:test -f Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:test

    outputs:
      IMAGE_TAG: ${{ steps.vars.outputs.TAG }}
      REGISTRY: ${{ steps.vars.outputs.REGISTRY }}

  deploy:
    needs:
      - build
    name: Deploy to Cluster
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "IMAGE_TAG=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV

      - name: deploy to cluster
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: translation-cms
        with:
          args: set image deployment/$ECR_REPOSITORY $ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}
